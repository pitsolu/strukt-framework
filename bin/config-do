#!/usr/bin/env php
<?php

// require "bootstrap.php";

$autoloadFiles = array(__DIR__ . '/../vendor/autoload.php',
                       __DIR__ . '/../../../autoload.php');

foreach($autoloadFiles as $autoloadFile)
    if(file_exists($autoloadFile))
        require_once $autoloadFile;

Strukt\Fs::mkdir("cfg");
Strukt\Fs::mkdir("tpl/sgf/database/schema/Schema/Migration");
Strukt\Fs::mkdir("tpl/sgf/app/src/App/AuthModule/Controller");
Strukt\Fs::mkdir("tpl/sgf/app/src/App/AuthModule/Form");
Strukt\Fs::mkdir("tpl/sgf/app/src/App/AuthModule/Model");
Strukt\Fs::mkdir("tpl/sgf/app/src/App/AuthModule/Router");
Strukt\Fs::mkdir("tpl/sgf/lib/App");

Strukt\Fs::touchWrite("cfg/module.ini",
'[folders]
folder["ctr"] = "Controller"
folder["rtr"] = "Router"
folder["mdl"] = "Model"
folder["frm"] = "Form"
folder["tes"] = "Tests"
; folder["fix"] = "Fixture"
; folder["rep"] = "Repository"
; folder["sdr"] = "Seeder"');

Strukt\Fs::touchWrite("cfg/db.ini",
"dbname = payroll
user = root
password = root*
host = localhost
driver = pdo_pgsql
");

Strukt\Fs::touchWrite("cfg/app.ini",
"app-name = __APP__
");

Strukt\Fs::touchWrite("tpl/sgf/app/src/App/AuthModule/Controller/User.sgf",
"@ns:__APP__\AuthModule\Controller
@class:User
@inherit:\App\Data\Controller

@method:getAll
@body:return \"AuthModule\Controller\User::getAll Not Yet Implemented!\";

@method:doAuthentication@param:username|password
@body:return true;
");

Strukt\Fs::touchWrite("tpl/sgf/app/src/App/AuthModule/Form/User.sgf",
"@ns:__APP__\AuthModule\Form
@class:User
@inherit:\App\Form\Data

@method:protected>validation
@body
\$factory = \$this->getValidationFactory();

		\$this->setMessage(\"username\", \$factory->newValidator()
				->setVal(\$this->getParam(\"password\"))
				->isNotEmpty());

		\$this->setMessage(\"password\", \$factory->newValidator()
				->setVal(\$this->getParam(\"password\"))
				->isNotEmpty());
@body
");

Strukt\Fs::touchWrite("tpl/sgf/app/src/App/AuthModule/Router/Auth.sgf",
"@ns:__APP__\AuthModule\Router
@import:Psr\Http\Message\RequestInterface
@import:Psr\Http\Message\ResponseInterface
@class:Auth
@inherit:\App\Data\Router

@method:login
@body
\$username = self::param(\"username\");
		\$password = self::param(\"password\");

		\$userForm = self::get(\"core\")->getNew(\"au.frm.User\");
		\$messages = \$userForm->validate();

		if(\$messages[\"is_valid\"])
		    if(self::get(\"core\")->get(\"au.ctr.User\")->doAuthentication(\$username, \$password))
		       return self::json(array(

		            \"success\"=>true, 
		            \"message\"=>\"User successfully authenticated.\"
		        ));
		    else 
		        return self::json(array(

		            \"success\"=>false,
		            \"message\"=>\"Failed to authenticate user!\"
		        ));
		else
		    return self::json(array(

		        \"success\"=>false,
		        \"message\"=>\"Invalid input!\"
		    ));
@body
@descr:@Route:/login
@descr:@Method:POST
");

Strukt\Fs::touchWrite("tpl/sgf/app/src/App/AuthModule/Router/Index.sgf",
"@ns:__APP__\AuthModule\Router
@import:Psr\Http\Message\RequestInterface
@import:Psr\Http\Message\ResponseInterface
@class:Index
@inherit:\App\Data\Router

@method:welcome
@body:return \"</b>Strukt Works!<b>\";
@descr:@Route:/
@descr:@Method:GET

@method:helloWorld
@body:return self::htmlfile(\"public/static/index.html\");
@descr:@Route:/hello/world
@descr:@Method:GET

@method:helloTo@param:name|req#RequestInterface|res#ResponseInterface
@body:return sprintf(\"<b>Hello %s!</b>\", \$name);
@descr:@Route:/hello/{name:alpha}
@descr:@Method:GET

@method:getAllUsers
@body:return self::get(\"core\")->get(\"au.ctr.User\")->getAll();
@descr:@Route:/users/all
@descr:@Permission:user_all
@descr:@Method:GET

@method:testException
@body:throw new \Exception(\"Whoops!\");
@descr:@Route:/test
@descr:@Method:GET
");

Strukt\Fs::touchWrite("tpl/sgf/app/src/App/AuthModule/_AuthModule.sgf",
"@ns:__APP__\AuthModule
@class:__APP__AuthModule
@inherit:\App\Module

@param:protected>alias=\"Au\"
");

Strukt\Fs::touchWrite("tpl/sgf/lib/App/Loader.sgf",
"@ns:App
@class:Loader
@descr
	Application Loader Class

	WARNING: THIS FILE IS AUTO-GENERATED. 
			   DO NOT ADD ANYTHING BECAUSE 
			   IT WILL BE OVERWRITTEN

	@author Moderator <pitsolu@gmail.com>
@descr

@param:private>app#Strukt\Application

@method:__construct
@body
\$this->app = new \Strukt\Application();
		%s

		\$r = \Strukt\Core\Registry::getInstance();
		\$r->set(\"nr\", \$this->app->getNameRegistry());
		\$r->set(\"core\", new \Strukt\Framework\Module\Core());
@body
@descr
	
	Constructor
	
	Initialize Strukt Framework
@descr

@method:getApp#Strukt\Application
@body
\$loader = new self;

		return \$loader->app;
@body
@descr:Getter for Strukt Application
");

Strukt\Fs::touchWrite("tpl/sgf/database/schema/Schema/Migration/Version_.sgf",
"@ns:Schema\Migration
@import:Doctrine\DBAL\Migrations\AbstractMigration
@import:Doctrine\DBAL\Schema\Schema
@class:Version__VER__
@inherit:AbstractMigration
@descr:Auto-generated Migration: Please modify to your needs!

@method:public>up@param:schema#Schema
@body:// this up() migration is auto-generated, please modify it to your needs

@method:public>down@param:schema#Schema
@body:// this up() migration is auto-generated, please modify it to your needs
");